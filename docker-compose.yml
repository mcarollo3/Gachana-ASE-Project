version: "3.8"
services:
  user_db:
    image: mysql:latest
    container_name: user_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: UserService
      MYSQL_USER: gachana
      MYSQL_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - user_data:/var/lib/mysql
      - ./config_files/databases/user_service_db.sql:/docker-entrypoint-initdb.d/user_service_db.sql
    networks:
      - api_network

  gacha_db:
    image: mysql:latest
    container_name: gacha_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: GachaService
      MYSQL_USER: gachana
      MYSQL_PASSWORD: root
    ports:
      - "3308:3306"
    volumes:
      - gacha_data:/var/lib/mysql
      - ./config_files/databases/gacha_service_db.sql:/docker-entrypoint-initdb.d/gacha_service_db.sql
    networks:
      - api_network

  market_db:
    image: mysql:latest
    container_name: market_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: MarketService
      MYSQL_USER: gachana
      MYSQL_PASSWORD: root
    ports:
      - "3309:3306"
    volumes:
      - market_data:/var/lib/mysql
      - ./config_files/databases/market_service_db.sql:/docker-entrypoint-initdb.d/market_service_db.sql
    networks:
      - api_network

  transaction_db:
    image: mysql:latest
    container_name: transaction_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: TransactionService
      MYSQL_USER: gachana
      MYSQL_PASSWORD: root
    ports:
      - "3310:3306"
    volumes:
      - transaction_data:/var/lib/mysql
      - ./config_files/databases/transaction_service_db.sql:/docker-entrypoint-initdb.d/transaction_service_db.sql
    networks:
      - api_network

  user_service:
    build:
      context: ./backend/user_service
    container_name: user_service
    environment:
      DB_HOST: "user_db"
      DB_NAME: "UserService"
      DB_USER: "gachana"
      DB_PASSWORD: "root"
    ports:
      - "5000:5000"
    networks:
      - api_network

  nginx:
    image: nginx:latest
    container_name: api_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - user_service
    networks:
      - api_network

volumes:
  user_data:
    name: user_db_volume
  gacha_data:
    name: gacha_db_volume
  market_data:
    name: market_db_volume
  transaction_data:
    name: transaction_db_volume

networks:
  api_network:
    driver: bridge
