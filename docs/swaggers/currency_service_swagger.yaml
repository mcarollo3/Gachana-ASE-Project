openapi: 3.0.0
info:
  title: Currency Management API
  description: API for managing user wallets and transactions in a gacha system.
  version: 1.0.0
servers:
  - url: http://localhost/currency/
paths:
  /buy_currency:
    patch:
      summary: Add funds to the user's wallet
      description: Adds funds to a user's wallet after successful payment processing.
      operationId: addFunds
      tags:
        - Wallet
      security:
        - BearerAuth: []
      requestBody:
        description: The payment details and amount to be added.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: decimal
                  description: The amount to be added.
                card_number:
                  type: string
                  description: The card number used for payment.
                expiry_date:
                  type: string
                  description: The expiry date of the card (MM/YY).
                cvv:
                  type: string
                  description: The card's CVV code.
      responses:
        "200":
          description: Funds successfully added to the wallet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "100.00 added to your wallet successfully!"
        "400":
          description: Invalid input or failed payment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: An error occurred during the transaction.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /transactions:
    get:
      summary: Get a list of the user's transactions
      description: Retrieves all transactions related to the current user.
      operationId: getUserTransactions
      tags:
        - Transaction
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of transactions for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    old_wallet:
                      type: number
                      format: decimal
                    new_wallet:
                      type: number
                      format: decimal
                    description:
                      type: string
                    date:
                      type: string
                      format: date-time
        "404":
          description: No transactions found for the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /transactions/list:
    get:
      summary: Get all transactions
      description: Retrieves all transactions in the system (admin-only access).
      operationId: getAllTransactions
      tags:
        - Transaction
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of all transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    old_wallet:
                      type: number
                      format: decimal
                    new_wallet:
                      type: number
                      format: decimal
                    description:
                      type: string
                    date:
                      type: string
                      format: date-time
  /transactions/{user_id}:
    get:
      summary: Get transactions for a specific user (admin-only)
      description: Retrieves transactions for a specified user (admin-only access).
      operationId: getUserTransactionsByAdmin
      tags:
        - Transaction
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          description: The user ID to retrieve transactions for.
          schema:
            type: integer
      responses:
        "200":
          description: Transactions for the specified user.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    old_wallet:
                      type: number
                      format: decimal
                    new_wallet:
                      type: number
                      format: decimal
                    description:
                      type: string
                    date:
                      type: string
                      format: date-time
        "404":
          description: No transactions found for the specified user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /wallet:
    get:
      summary: Get the current balance of the user's wallet
      description: Retrieves the current balance of the user's wallet.
      operationId: getWallet
      tags:
        - Wallet
      security:
        - BearerAuth: []
      responses:
        "200":
          description: The current wallet balance for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    wallet:
                      type: number
                      format: decimal
        "404":
          description: Wallet not found for the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /spend_currency:
    patch:
      summary: Spend funds from the user's wallet
      description: Deducts funds from the user's wallet for purchases.
      operationId: spendFunds
      tags:
        - Wallet
      security:
        - BearerAuth: []
      requestBody:
        description: The amount to deduct from the user's wallet.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: decimal
      responses:
        "200":
          description: Funds successfully deducted from the wallet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "50.00 deducted from your wallet successfully!"
        "400":
          description: Invalid input or insufficient funds.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: An error occurred while processing the transaction.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /refund:
    post:
      summary: Process refunds for users
      description: Handles refund requests and adds money back to users' wallets.
      operationId: refund
      tags:
        - Refund
      requestBody:
        description: The refund data including the user IDs and the offer values.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: A token to authenticate the request.
                refund_data:
                  type: array
                  items:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      offer_value:
                        type: number
                        format: decimal
      responses:
        "200":
          description: Refunds processed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Invalid refund data format or missing required data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: An error occurred while processing the refund.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
