openapi: 3.0.0
info:
  title: User Microservice API
  version: 1.0.0
  description: API documentation for the User microservice.
servers:
  - url: http://localhost/user
paths:
  /signup:
    post:
      summary: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                psw:
                  type: string
              required:
                - username
                - psw
      responses:
        "201":
          description: User successfully registered.
        "400":
          description: Username already exists or incomplete data.

  /login:
    post:
      summary: Login to get a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Token generated successfully.
        "401":
          description: Invalid credentials.

  /logout:
    post:
      summary: Logout the user.
      responses:
        "200":
          description: Successfully logged out.

  /list:
    get:
      summary: Get a list of all users (Admin only).
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of users.
        "403":
          description: Forbidden. Admin access required.

  /{user_id}:
    get:
      summary: Get details of a specific user by ID (Admin only).
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User details retrieved.
        "403":
          description: Forbidden. Admin access required.

  /{user_id}/update:
    patch:
      summary: Update a specific user (Admin only).
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                psw:
                  type: string
                role:
                  type: string
                id_image:
                  type: string
      responses:
        "200":
          description: User updated successfully.
        "403":
          description: Forbidden. Admin access required.

  /{user_id}/delete:
    delete:
      summary: Delete a user account (Admin only).
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User account deleted successfully.
        "403":
          description: Forbidden. Admin access required.

  /delete:
    delete:
      summary: Delete the authenticated user's account (Player only).
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User account deleted successfully.
        "403":
          description: Forbidden. Player access required.

  /update:
    patch:
      summary: Update the authenticated user's account.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                psw:
                  type: string
                id_image:
                  type: string
      responses:
        "200":
          description: User information updated successfully.
        "400":
          description: No data provided for update.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
